from crewai.flow.flow import Flow,start,listen
from dotenv import load_dotenv,find_dotenv
from litellm import completion
from litellm_proj.teaching_crew.teacing_crew import TeachingCrew

_:bool = load_dotenv(find_dotenv())

class LitellmFlow(Flow):

    @start()
    def generate_topic(self):
        response = completion(
            model="gemini/gemini-1.5-flash",
            messages=[
                {"role":"user",
                 "content":"""
                 who is th founder of pakistan"""
                 }
            ]
        )
        # save the content/text of the response in the state value or variable "topic"(a state level dictionary)
        self.state["topic"] = response["choices"][0]["message"]["content"]
        
        print(f"step 1 topic: {self.state['topic']}")

    # to make another agent which is to write an summary on title/topic generated by above agent

    @listen("generate_topic")
    def content_creator():
        # 1. create crew
        print("step two is running")
        result = TeachingCrew().crew().kickoff(
            inputs={
                "topic": self.state['topic']
            }
        )   
        print(result.raw)    
     


def kickofff():
    # object of a class
    flow = LitellmFlow()
    # build in method 
    flow.kickoff()
    
