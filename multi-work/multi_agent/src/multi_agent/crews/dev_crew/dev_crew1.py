from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task

# If you want to run a snippet of code before or after the crew starts,
# you can use the @before_kickoff and @after_kickoff decorators
# https://docs.crewai.com/concepts/crews#example-crew-class-with-decorators


@CrewBase
class DevCrew:

    #junior python developer agent
    @agent
    def junior_python_developer(self) -> Agent:
        return Agent(
            role="junior python developer",
            goal=" write python code solution without python type hints and pydocs for this problem '{problem}'",
            backstory="You have 3 year python web development experince ,you know how to use flask, django"
        )
    #senior python developer agent
    @agent
    def senior_python_developer(self) -> Agent:
        return Agent(

            role="senior python developer",
            goal="""review the code generated by junior_python_developer this problem '{problem}'
                    apply type hints
                    apply python pydocs
                    write three pytest test cases for the code""",
            backstory="""You have 20 year experince in machine learning,deep learning,generative ai
                          you have good command on crewai and langgraph."""
           
            
        )
   
    #task of junior python developer
    @task
    def write_code(self) -> Task:
        return Task(
            description="you have to wirte python solution without type hints and pydocs to this proble'{problem}'.",
            expected_output="print the output of code.",
            agent=self.junior_python_developer()

        )
    #task of senior python developer
    @task
    def overview_code(self) -> Task:
        return Task(

            description="""you have to review the code generated by junior_python_developer this problem '{problem}'
                            apply type hints and pydocs
                            apply python pydocs
                            write three pytest test cases for the code
                            """,
            expected_output="print the output of code.",
            agent=self.senior_python_developer()         
        )

    @crew
    def crew(self) -> Crew:
        """Creates the Research Crew"""
        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,  # Automatically created by the @task decorator
            process=Process.sequential,
            verbose=True,
        )
